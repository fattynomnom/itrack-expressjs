enum CategoryType {
    expense
    income
}

type User {
    email: String!
    categories: [Category!]!
}

type Category {
    uid: ID!
    name: String!
    type: CategoryType!
    color: String!
    user_email: String!
}

type DefaultCategory {
    uid: ID!
    name: String!
    type: CategoryType!
    color: String!
}

type Transaction {
    uid: ID!
    name: String!
    amount: Float!
    date: String!
    category_uid: String!
    user_email: String!
}

type AddUserMutationResponse {
    email: String!
    categories: [Category!]!
}

input AddTransactionInput {
    name: String!
    amount: Float!
    category_uid: String!
}

type AddTransactionResponse {
    uid: ID!
    name: String!
    amount: Float!
    date: String!
    category_uid: String!
    user_email: String!
    category: Category!
}

type Query {
    getAllUsers: [User]
    getTransactions: [Transaction]
}

type Mutation {
    addUser(email: String!): AddUserMutationResponse!
    addTransaction(transaction: AddTransactionInput!): AddTransactionResponse!
}
